import mysql.connector
my2 = mysql.connector.connect(host="localhost",
                             user="root",
                             passwd="192837465s",
                            database="adengine")
mycursor = my2.cursor()

mycursor.execute('CREATE TABLE videos_ids (id INT PRIMARY KEY AUTO_INCREMENT, channel_id VARCHAR(70), '
                 'video_id VARCHAR(100), add_date DATETIME)')
my2.commit()

mycursor.execute('CREATE TABLE channels ('
        0         'id INT PRIMARY KEY AUTO_INCREMENT, '
        1         'channelId VARCHAR(70), '
        2        'title VARCHAR(100), '
        3         'description MEDIUMTEXT, '
        4         'rating INT, '
        5         'relatedVkGroup VARCHAR(255), '
        6         'relatedInstagramPage VARCHAR(255), '
        7         'relatedPromotionPage VARCHAR(255), '
        8         'relatedOther MEDIUMTEXT, '
        9         'customUrl VARCHAR(120), '
       10          'publishedAt DATETIME, '
       11          'country VARCHAR(10), '
       12          'logoUrl VARCHAR(255), '
       13          'playlistLikes VARCHAR(255), '
       14          'playlistUploads VARCHAR(255), '
       15          'viewCount INT, '
       16          'commentCount INT, '
       17          'subscriberCount INT, '
       18          'hiddenSubscriberCount BOOL, '
       19          'videoCount INT, '
       20          'privacyStatus ENUM("public", "private", "unlisted"), '
       21          'showRelatedChannels BOOL, '
       22          'bannerImage VARCHAR(255), '
       23          'addDateTime DATETIME, '
       24          'localisationStatus INT, '
       25          'lastEditTime DATETIME'
                 ')')

mycursor.execute("CREATE TABLE channelstogo ("
                     "id INT PRIMARY KEY AUTO_INCREMENT, "
                     "channelId VARCHAR(70), "
                     "leadingChannelId VARCHAR(70), "
                     "status VARCHAR(10))")
                     

mycursor.execute('CREATE TABLE youtube_video_categories (id INT, category_name VARCHAR(70), category_description VARCHAR(100))')
                     
values = [('1', 'Фильмы и анимация', 'Новые трейлеры фильмов, видео про фильмы, сцены и музыка '
                                     'из фильмов/мультсериалов, мультфильмы.'),
          ('2', 'Автомобили', 'Все видео об автомобилях, моотциклах, транспорте, авто выставках и так далее.'),
          ('10', 'Музыка', 'Песни, видеоклиипы, ролики музыкантов.'),
          ('15', 'Животные', 'Смешные и интересные видео о животных и домашних питомцах.'),
          ('17', 'Спорт', 'Видео про спортивные события, тренировки и спортсменов.'),
          ('19', 'Путешествия и события', 'Места для путешествий, рассказы о путешествиях, блоги из других стран.'),
          ('20', 'Игры', 'Летсплеи, прохождения, обзоры игр и событий на игровом рынке, киберспорт и тому подобное.'),
          ('22', 'Люди и блоги', 'Видео о людях, из блоги, лайфстайл, обзоры, реклама и прочее.'),
          ('23', 'Комедия', 'Комедийные сериалы, стенд-апы, шоу, мультфильмы и выступления.'),
          ('24', 'Развлечения', 'Развлекательные видео, для которых сложно уточнить категорию.'),
          ('25', 'Новости и политика', 'Видео, согласно названию, на темы новостей и политики.'),
          ('26', 'Стиль', 'Howto&Style - категория в которой собраны видео о стиле, моде, лайфхакам и так далее.'),
          ('27', 'Образование', 'Категория "обраазование" включает в себя обучающие видео, '
                                'которые не подходят под иные категории.'),
          ('28', 'Наука и технологии', 'Видео о науке и ехнологиях попадают в эту категорию.'),
          ('29', 'Иные активности', 'Иные активности (Nonprofits & Activism) - видео, которые не подходят под '
                                    'иные категории.')]
for i in values:
    mycursor.execute('INSERT INTO youtube_video_categories (id, category_name, category_description) VALUES (%s, %s, %s)', i)
'''
'''
id, video_id, published_at, title, description, image_url, category_id, default_language, duration, dimension,
definition(hd, sd), caption(True, False), licensed_content(True, False), projection(360, rectangular), privacyStatus,
embeddable, view_count, like_count, dislike_count, favorite_count, comment_count, topic_categories
mycursor.execute('CREATE TABLE videos ('
                 'id INT PRIMARY KEY AUTO_INCREMENT, '
                 'channel_id VARCHAR(70), '
                 "video_id VARCHAR(70), "
                 "published_at DATETIME, "
                 "title VARCHAR(200), "
                 "description VARCHAR(5000), "
                 "image_url VARCHAR(100), "
                 "live_broadcast VARCHAR(10), "
                 "category_id VARCHAR(50), "
                 "default_language VARCHAR(10), "
                 "duration VARCHAR(10), "
                 "dimension VARCHAR(10), "
                 "definition VARCHAR(3), "
                 "caption BOOL, "
                 "licensed_content BOOL, "
                 "projection VARCHAR(11), "
                 "privacy_status VARCHAR(10), "
                 "embeddable BOOL, "
                 "view_count INT, "
                 "like_count INT, "
                 "dislike_count INT, "
                 "favorite_count INT, "
                 "comment_count INT, "
                 "topic_categories VARCHAR(70)"
                 ")")


ДЛЯ ОТЛАДКИ
mycursor.execute('DELETE FROM channels')
mycursor.execute('DELETE FROM channelsToGo')
mycursor.execute('DELETE FROM videos_ids')
mycursor.execute('DELETE FROM videos')
mycursor.execute("SELECT id FROM videos")
res = mycursor.fetchall()
for i in res:
    print(i)
    
    

mycursor.execute("CREATE TABLE comments ("
                 "id INT PRIMARY KEY AUTO_INCREMENT, "
                 "video_id VARCHAR(70), "
                 "comment_author VARCHAR(70), "
                 "text BLOB, "
                 "sentiment FLOAT, "
                 "comment_like_count INT, "
                 "comment_publish_date DATETIME)")


mycursor.execute('CREATE TABLE vk_users ('
           0      'id INT PRIMARY KEY AUTO_INCREMENT, '
           1      'user_id INT, '
           2      'user_first_name VARCHAR(30), '
           3      'user_last_name VARCHAR(30), '
           4      'user_sex TINYINT, '
           5      'user_nickname VARCHAR(30), '
           6      'user_maiden_name VARCHAR(30), '
           7      'user_screen_name VARCHAR(30), '
           8      'user_birthday DATE, '
           9      'user_city_id INT, '
           10      'user_city_name VARCHAR(50), '
           11     'user_country_id INT, '
           12      'user_country_name VARCHAR(50), '
           13      'user_photo_link VARCHAR(100), '
           14      'user_has_mobile BINARY, '
           14      'user_can_see_all_posts BINARY, '
           15      'user_can_see_audio BINARY, '
           16      'user_can_write_private_message BINARY, '
           17      'user_can_send_friend_request BINARY, '
           18      'user_can_post BINARY, '
           19      'user_site VARCHAR(100), '
           20      'user_status VARCHAR(250), '
           21      'user_last_seen_platform TINYINT, '
           22      'user_verified BIT, '
           23      'user_followers_count MEDIUMINT UNSIGNED, '
           24      'user_occupation_type ENUM("work","school","university","none"), '
           25      'user_occupation_id INT, '
           26      'user_occupation_name VARCHAR(50), '
           27      'user_home_town VARCHAR(50), '
           28      'user_relation TINYINT, '
           29      'user_personal_political TINYINT, '
           30      'user_personal_langs VARCHAR(300), '
           31      'user_personal_religion_id VARCHAR(255), '
           32      'user_personal_inspired_by VARCHAR(250), '
           33      'user_personal_people_main TINYINT, '
           34      'user_personal_life_main TINYINT, '
           35      'user_personal_smoking TINYINT, '
           36      'user_personal_alcohol TINYINT, '
           37      'user_interests VARCHAR(250), '
           38      'user_music VARCHAR(250), '
           39      'user_activities VARCHAR(250), '
           40      'user_movies VARCHAR(250), '
           41      'user_tv VARCHAR(250), '
           42      'user_books VARCHAR(250), '
           43      'user_games VARCHAR(250), '
           44      'user_about VARCHAR(250), '
           45      'user_quotes VARCHAR(250),'
           46      'user_military_unit VARCHAR(30), '
           47      'user_military_unit_id INT, '
           48      'user_military_country_id INT, '
           49      'user_military_from SMALLINT, '
           50      'user_military_until SMALLINT)')

mycursor.execute('CREATE TABLE vk_users_career ('
                 'id INT PRIMARY KEY AUTO_INCREMENT, '
                 'user_id INT, '
                 'user_career_group_id INT, '
                 'user_career_company VARCHAR(50), '
                 'user_career_country_id SMALLINT, '
                 'user_career_city_id SMALLINT, '
                 'user_career_city_name VARCHAR(50), '
                 'user_career_from SMALLINT, '
                 'user_career_until SMALLINT, '
                 'user_career_position VARCHAR(50))')

mycursor.execute('CREATE TABLE vk_users_universities ('
                 'id INT PRIMARY KEY AUTO_INCREMENT, '
                 'user_id INT, '
                 'user_university_id INT, '
                 'user_university_name VARCHAR(50), '
                 'user_university_country_id INT, '
                 'user_university_city_id INT, '
                 'user_university_faculty INT, '
                 'user_university_faculty_name VARCHAR(120), '
                 'user_university_chair INT, '
                 'user_university_chair_name VARCHAR(120), '
                 'user_university_graduation SMALLINT, '
                 'user_university_education_form VARCHAR(20), '
                 'user_university_education_status VARCHAR(50))')
mydb.commit()

mycursor.execute('CREATE TABLE vk_users_schools ('
                 'id INT PRIMARY KEY AUTO_INCREMENT, '
                 'user_id INT, '
                 'user_school_id INT, '
                 'user_school_name VARCHAR(50), '
                 'user_school_country_id SMALLINT, '
                 'user_school_city_id INT, '
                 'user_school_year_from SMALLINT, '
                 'user_school_year_to SMALLINT, '
                 'user_school_type TINYINT)')
mydb.commit()

mycursor.execute('CREATE TABLE vk_users_relatives ('
                 'id INT PRIMARY KEY AUTO_INCREMENT, '
                 'user_id INT, '
                 'relative_id INT, '
                 'relative_type ENUM("child", "sibling", "parent", "grandparent", "grandchild"), '
                 'relative_name VARCHAR(60))')

mycursor.execute('CREATE TABLE vk_page_subs ('
                 'id INT PRIMARY KEY AUTO_INCREMENT, '
                 'user_id INT, '
                 'vk_page VARCHAR(120))')
mydb.commit()

mycursor.execute("SELECT title, description FROM videos WHERE channel_id = 'UCSF6ewY9LS8GnbphwvnZpUg'")
fetch_title_description = mycursor.fetchall()
for i in fetch_title_description:
    print(i)
mycursor.execute("SELECT title, channelId FROM channels")
r = mycursor.fetchall()
for i in r:
    print(i)
    '''
